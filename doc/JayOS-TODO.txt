
JayOS TODO list, in no particular order:


1) Disk probing from within linuxrc needs enhancing. This is why
linuxrc.orig is still hanging around in the source.

2) Cirrus video driver support needs re-configuring at the kernel level
to support video under Qemu.

3) Upgrade to Linux-3.2.



** older stuff **

A) hardware recognition
Make probing of video card and graphics resolution more robust. Currently,
you have to boot with "newvid" option to force probing, and optionally 
adjust your XF86Config.conf for greater depth. I would like the system
to boot into 1280x1024 or the next highest supported resolution.


B) install scripts
Need scripts written which will copy the boot loader, initial ramdisk, 
root and usr filesystems to the hard drive or USB storage devices. Will
also need options added to /linuxrc to accomplish booting from other
devices.


D) PowerPC boot sequence
Kernel hangs when passing control from initial ramdisk to /sbin/init on
real root device. The last messages written on the console are:

	pivot_root: pivot_root:  No such file or directory
	chroot:  cannot exec /sbin/init:  no such file or directory
	Freeing unused kernel memory:  180k init 4k chrp 8k prep

** Resolved [ 20060219 ]


F) Qemu
I would like to provide a windows and linux Qemu binary so the user can 
launch JayOS under windows, but it needs to be correctly implemented. 

First, in keeping with the spirit of a source-based distro, qemu.exe 
needs to be cross-compiled with mingw, which is currently not included in
the distro. The mingw libraries are about the size of a kernel tarball, and 
I don't know if a single use justifies the space it requires.

Now, assuming that I have a properly compiled windows binary, Qemu will want
to load JayOS from either cdrom (an ISO image) or hard disk (another image).
Which will it be? I think it's a stupid idea to create an ISO within an ISO
because it makes disassembly a pain. Also, it would mean modifying the
Makefile, linuxrc and some boot scripts to change the startup logic, 
something I'd rather not do at this stage.

A better idea is to create a hard-disk image large enough to hold the 
(expanded) root filesystem, probably no bigger than 100MB. Command line
arguments to qemu would look something like: -hda hdisk.img.  Also, a qemu 
target will need to be added to Makefile for building the executable and 
disk image. This is much cleaner than the ISO within an ISO approach, but 
now the problem is how to access the usr filesystem (stored on the host CD 
as /fs/usr.fs). 

usr.fs cannout be specified as an argument to -hdb because it is a
filesystem, not a proper disk image with partitions and such. Mounting
usr.fs will probably entail creating and partitioning a second disk 
image, and loading it with the uncompressed(!) usr files. Now we have a
space issue because usr is over 1 gig uncompressed. 

So the problem of how to add Qemu is not straight-forward at all. I might
resort to generating a different kind of CD specifically for use under 
Windows. In that case, the whole OS would be pre-installed onto a hard
disk image and booted from there. Not really a bad idea, it only requires
writing a qemu-image Makefile stanza.

** Resolved [ 20051015 ]

